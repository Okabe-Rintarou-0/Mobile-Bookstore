version: "3.9"
services:
  redis:
    image: redis:5.0.1
    container_name: redis
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./build/redis/redis.conf:/etc/redis/redis.conf
      - ./data/redis/data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - app
  mysql:
    image: mysql_img
    container_name: mysql
    volumes:
      - ./build/mysql/mysql.cnf:/etc/mysql/my.cnf
      - ./data/mysql/data:/var/lib/mysql
      - ./data/mysql/files:/var/lib/mysql-files
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 45s
      retries: 10
    networks:
      - app
  mongo:
    container_name: mongo
    image: mongo:5.0
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - '27018:27017'
    volumes:
      - ./build/mongo/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app
  app:
    image: app_img
    container_name: app
    ports:
      - "8080:8080"
    volumes:
      - ./config.yml:/build/config.yml
      - ./static:/build/static
    networks:
      - app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
networks:
  app:
    driver: bridge
